apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
spec:
  selector: #表示管理app=mysql 的pod
    matchLabels:
      app: mysql
  serviceName: mysql
  replicas: 3 #表示3个节点 一个master 2个slave
  template:
    metadata:
      labels:
        app: mysql
    spec:
      initContainers:
      - name: init-mysql
        image: mysql:5.7
        command:
          - bash
          - "-c"
          - |
            set -ex 
            # 从Pod的序号，生成server-id 
            [[ `hostname` =~ -([0-9]+)$ ]] || exit 1 
            ordinal=${BASH_REMATCH[1]} 
            echo [mysqld] > /mnt/conf.d/server-id.cnf 
            # 由于server-id=0有特殊含义，我们给ID加一个100来避开它 
            echo server-id=$((100 + $ordinal)) >> /mnt/conf.d/server-id.cnf 
            # 如果Pod序号是0，说明它是Master节点，从ConfigMap里把Master的配置文件拷贝到/mnt/conf.d/目录； 
            # 否则，拷贝Slave的配置文件 
            if [[ $ordinal -eq 0 ]]; then 
              cp /mnt/config-map/master.cnf /mnt/conf.d/ 
            else 
              cp /mnt/config-map/slave.cnf /mnt/conf.d/ 
            fi 
        volumeMounts: 
        - name: conf 
          mountPath: /mnt/conf.d 
        - name: config-map 
          mountPath: /mnt/config-map
      - name: clone-mysql
        image: gcr.io/google-samples/xtrabackup:1.0
        command:
        - bash
        - "-c"
        - |
          set -ex
          # 拷贝操作只需要在第一次启动时进行，所以如果数据已经存在，跳过
          [[ -d /var/lib/mysql/mysql ]] && exit 0
          # Master节点(序号为0)不需要做这个操作
          [[ `hostname` =~ -([0-9]+)$ ]] || exit 1
          ordinal=${BASH_REMATCH[1]}
          [[ $ordinal -eq 0 ]] && exit 0
          # 使用ncat指令，远程地从前一个节点拷贝数据到本地
          ncat --recv-only mysql-$(($ordinal-1)).mysql 3307 | xbstream -x -C /var/lib/mysql
          # 执行--prepare，这样拷贝来的数据就可以用作恢复了
          xtrabackup --prepare --target-dir=/var/lib/mysql
        volumeMounts:
        - name: data
          mountPath: /var/lib/mysql
          subPath: mysql
        - name: conf
          mountPath: /etc/mysql/conf.d
      container:
      - name: mysql
      - name: xtrabackup
      volumes:
      - name: config
        emptyDir: {}
      - name: config-map
        configMap:
          name: mysql
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 10Gi